name: Build
description: 'Build library'
inputs:
  root_dir:
    description: 'Root directory'
    required: true
  should_checkout:
    description: 'Checkout the core library?'
    required: true
    default: '1'
  dir:
    description: 'Library directory'
    required: true
    default: 'core/shared'
runs:
  using: "composite"
  steps:
    - name: Initialize Env
      id: init-env
      uses: Silverlan/common_actions/set_common_env_vars@main

    - shell: bash
      run: |
        echo "Building submodule..."

    ############################## WORKS ##############################
    # Write cache test
    #- name: Build submodule
    #  uses: Silverlan/common_actions/build_submodule@actions
    #  with:
    #    repo: 'https://github.com/Silverlan/test_shared_library'
    #    repo_name: 'test_shared_library'
    #    repo_branch: 'main'
    #    build_target: test_shared_library
        
    #- name: Write cache
    #  uses: actions/cache@v2
    #  with:
    #    path: "D:/a/pragma/pragma/**/*.dll"
    #    key: test-cache-file13
    
    # Read cache test
    #- name: Get cached file
    #  uses: actions/cache@v2
    #  id: get-cached-file
    #  with:
    #    path: "D:/a/pragma/pragma/**/*.dll"
    #    key: test-cache-file13
    ############################## WORKS ##############################
    
    # Test with single path
    #- name: Create files
    #  shell: bash
    #  run: |
    #    mkdir subdir
    #    cd subdir
    #    printf '%s' "Lorem ipsum" >> a.txt
        
    #- name: Write cache (Single path)
    #  uses: actions/cache@v2
    #  with:
    #    path: "D:/a/pragma/pragma/**/*.txt"
    #    key: test-cache-single-path
    
    # Read cache
    #- name: Get cached file
    #  uses: actions/cache@v2
    #  id: get-cache
    #  with:
    #    path: "D:/a/pragma/pragma/**/*.txt"
    #    key: test-cache-single-path
    
    #- name: Print files
    #  shell: bash
    #  run: |
    #    echo "Cache hit: ${{steps.get-cache.outputs.cache-hit}}"
    #    cd "D:/a/pragma/pragma"
    #    ls -R
    #    cat "D:/a/pragma/pragma/subdir/a.txt"
    
    
    
    
    
    
    #- name: Create files
    #  shell: bash
    #  id: store
    #  run: |
    #    mkdir -p 'cache_test2/subdir'
    #    cd 'cache_test2/subdir'
    #    echo pwd $(pwd)
    #    printf '%s' "Lorem ipsum" >> a.txt
    #    printf '%s' "dolor sit amet" >> b.md
    #    cat a.txt b.md
    # Write cache test
    #- name: Write cache
    #  uses: Silverlan/pragma/github_actions/write_cache@actions
    #  with:
    #    cache_dir: 'cache_test2'
    #    cache_id: 'test-cache-q'
    
    # Write cache test
    #- name: Read cache
    #  uses: Silverlan/pragma/github_actions/read_cache@actions
    #  with:
    #    cache_dir: 'cache_test2'
    #    cache_id: 'test-cache-q'
    #- name: Print files (B)
    #  shell: bash
    #  run: |
    #    find cache_test2 -type f | xargs -t grep -e.
    
    # Write cache test
    - name: Create files
      shell: bash
      id: store
      run: |
        mkdir -p 'cache_test/subdir'
        cd 'cache_test/subdir'
        echo pwd $(pwd)
        printf '%s' "Lorem ipsum" >> a.txt
        printf '%s' "dolor sit amet" >> b.md
        cat a.txt b.md
    - name: Write cache
      uses: Silverlan/pragma/github_actions/write_cache@actions
      with:
        cache_dir: 'cache_test'
        cache_id: 'test-cache-j'
    - name: Print files (A)
      shell: bash
      run: |
        echo "Cache hit: ${{steps.store.outputs.cache-hit}}"
        find cache_test/subdir
        cat cache_test/subdir/a.txt
        cat cache_test/subdir/b.md
        
    
    # Read cache test
    #- name: Read cache
    #  uses: Silverlan/pragma/github_actions/read_cache@actions
    #  with:
    #    cache_dir: 'cache_test'
    #    cache_id: 'test-cache-j'
    #- name: Print files (B)
    #  shell: bash
    #  run: |
    #    find 'cache_test' -type f | xargs -t grep -e.
    
    #- name: Create files
    #  shell: bash
    #  id: store
    #  run: |
    #    mkdir -p 'cache_test/subdir'
    #    cd 'cache_test/subdir'
    #    echo pwd $(pwd)
    #    printf '%s' "Lorem ipsum" >> a.txt
    #    printf '%s' "dolor sit amet" >> b.md
    #    cat a.txt b.md
    #- name: Store in cache
    #  uses: actions/cache@v2
    #  with:
    #    path: |
    #      cache_test/**/*.txt
    #      cache_test/**/*.md
    #    key: multiple-filesX-${{ hashFiles('cache_test/**') }}
    #- name: Print files (A)
    #  shell: bash
    #  run: |
    #    echo "Cache hit: ${{steps.store.outputs.cache-hit}}"
    #    find cache_test/subdir
    #    cat cache_test/subdir/a.txt
    #    cat cache_test/subdir/b.md

    #- name: Restore
    #  uses: actions/cache@v2
    #  with:
    #    path: |
    #      cache_test/**/*.txt
    #      cache_test/**/*.md
    #    key: multiple-filesX-${{ hashFiles('cache_test/**') }}
    #    restore-keys: |
    #      multiple-filesX-${{ hashFiles('cache_test/**') }}
    #      multiple-files-
    #- name: Print files (B)
    #  shell: bash
    #  run: |
    #    find cache_test -type f | xargs -t grep -e.
    
    
    
    
    
    
    
    
    
    
    
    
    # Test with multiple paths
    #- name: Create files
    #  shell: bash
    #  run: |
    #    mkdir -p cache_test/subdir
    #    cd cache_test/subdir
    #    printf '%s' "Lorem ipsum" >> a.txt
    #    printf '%s' "dolor sit amet" >> b.md
        
    #- name: Write cache (Multi path)
    #  uses: actions/cache@v2
    #  with:
    #    path: |
    #      "cache_test/**/*.txt"
    #      "cache_test/**/*.md"
    #    key: test-cache-multi-path-${{ hashFiles('cache_test/**') }}
    
    # Read cache
    #- name: Get cached file
    #  uses: actions/cache@v2
    #  id: get-cache
    #  with:
    #    path: |
    #      "cache_test/**/*.txt"
    #      "cache_test/**/*.md"
    #    key: test-cache-multi-path-${{ hashFiles('cache_test/**') }}
    
    #- name: Print files
    #  shell: bash
    #  run: |
    #    echo "Cache hit: ${{steps.get-cache.outputs.cache-hit}}"
    #    cd "D:/a/pragma/pragma"
    #    ls -R
    #    cat "D:/a/pragma/pragma/subdir/a.txt"
    #    cat "D:/a/pragma/pragma/subdir/b.md"
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    # Write cache test
    #- name: Build submodule
    #  uses: Silverlan/common_actions/build_submodule@actions
    #  with:
    #    repo: 'https://github.com/Silverlan/test_shared_library'
    #    repo_name: 'test_shared_library'
    #    repo_branch: 'main'
    #    build_target: test_shared_library
        
    #- name: Write cache
    #  uses: actions/cache@v2
    #  with:
    #    path: |
    #      "D:/a/pragma/pragma/**/*.dll"
    #      "D:/a/pragma/pragma/**/*.lib"
    #    key: test-cache-file14
    
    # Read cache test
    #- name: Get cached file
    #  uses: actions/cache@v2
    #  id: get-cached-file
    #  with:
    #    path: |
    #      "D:/a/pragma/pragma/**/*.dll"
    #      "D:/a/pragma/pragma/**/*.lib"
    #    key: test-cache-file14
            
    #- name: Print files
    #  shell: bash
    #  run: |
    #    echo "Cache hit: ${{steps.get-cached-file.outputs.cache-hit}}"
    #    cd "D:/a/pragma/pragma"
    #    ls -R
        
    - shell: bash
      run: |
        echo "Done!"
