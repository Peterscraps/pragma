name: Build
description: 'Build library'
inputs:
  root_dir:
    description: 'Root directory'
    required: true
  should_checkout:
    description: 'Checkout the core library?'
    required: true
    default: '1'
  dir:
    description: 'Library directory'
    required: true
    default: 'core/shared'
runs:
  using: "composite"
  steps:
    - name: Initialize Env
      id: init-env
      uses: Silverlan/common_actions/set_common_env_vars@main
      
    - uses: ChristopherHX/conditional@b4a9649204f81002ec9a4ef7d4bf7d6b2ab7fa55
      name: CMake Build
      with:
        if: ${{inputs.should_checkout == '1'}}
        step: |
          uses: Silverlan/common_actions/get_submodule@main
          with:
            repo: 'Silverlan/pragma'
            repo_name: 'pragma'
            cmake_var: 'DEPENDENCY_SHARED_INCLUDE'
            dir: 'external_libs'
            
    #- name: Build submodule - util_source2
    #  uses: Silverlan/util_source2/github_actions/build@master
    #  with:
    #    root_dir: "${{ env.GA_ROOT_DIR }}/external_libs/util_source2"   
            
 #   - uses: Silverlan/common_actions/get_submodule@main
 #     with:
 #       repo: 'https://github.com/lz4/lz4.git'
 #       repo_name: 'lz4'
 #       repo_branch: 'release'
 #       cmake_var: 'DEPENDENCY_LZ4_INCLUDE'
 #       dir: 'third_party_libs'

 #   # Can't invoke wgui action directly: Error: Composite action depth exceeded max depth 9
 #   #- name: Build submodule - wgui
 #   #  uses: Silverlan/wgui/github_actions/build@master
 #   #  with:
 #   #    root_dir: "${{ env.GA_ROOT_DIR }}/external_libs/wgui"
    
 #   - name: Define CMake Variables
 #     uses: Silverlan/common_actions/define_cmake_var@main
 #     with:
 #       cmake_var: '-DWGUI_INCLUDE_DEPENDENCIES=OFF'
            
    #- name: Build submodule - freetype2
    #  uses: Silverlan/common_actions/build_submodule@main
    #  with:
    #    repo: 'https://github.com/aseprite/freetype2'
    #    repo_name: 'freetype'
    #    repo_branch: 'master'
    #    build_target: freetype
    #    cmake_var: 'DEPENDENCY_FREETYPE_INCLUDE'
    #    cmake_var_lib: 'DEPENDENCY_FREETYPE_LIBRARY'
    #    cmake_definitions_tmp: ' -DCMAKE_POSITION_INDEPENDENT_CODE=ON'
    #    static_library: '1'
            
    #- name: Build submodule - materialsystem
    #  uses: Silverlan/materialsystem/github_actions/build@master
    #  with:
    #    root_dir: "${{ env.GA_ROOT_DIR }}/external_libs/materialsystem"
    #    
    #- name: Build submodule - util_formatted_text
    #  uses: Silverlan/util_formatted_text/github_actions/build@master
    #  with:
    #    root_dir: "${{ env.GA_ROOT_DIR }}/external_libs/util_formatted_text"
        
    #- name: Build submodule - wgui
    #  uses: Silverlan/common_actions/build_submodule@main
    #  with:
    #    repo: 'https://github.com/Silverlan/wgui'
    #    repo_name: 'wgui'
    #    repo_branch: 'master'
    #    build_target: wgui
    #    cmake_var: 'DEPENDENCY_WGUI_INCLUDE'
    #    cmake_var_lib: 'DEPENDENCY_WGUI_LIBRARY'
    #    cmake_definitions_tmp: ' -DWGUI_INCLUDE_DEPENDENCIES=OFF'
    
    

    #- name: Create file
    #  id: test-create
    #  shell: bash
    #  run: |
    #    printf '%s' " Some test text" >> test_file.txt
    
    #- name: Cache NPM dependencies
    #  uses: actions/cache@v2
    #  id: cache-test
    #  with:
    #    path: ./test_file.txt
    #    key: test-key
        
    #- name: Read file
    #  id: test-read
    #  shell: bash
    #  run: |
    #    echo "Cache hit: ${{ steps.cache-test.outputs.cache-hit }}"
    #    value="$(cat test_file.txt)"
    #    echo "File contents: $value"
    
    
    
    # Works!
    
    - name: Build zlib
      uses: Silverlan/common_actions/build_zlib@main
      
    - name: Build boost
      uses: Silverlan/pragma/github_actions/build_boost@actions
    
    - name: Create file
      id: def-boost
      shell: bash
      run: |
        boostDir="${{ env.GA_ROOT_DIR }}/third_party_libs/boost"
        boostLibDir="$boostDir/stage/lib"
        echo '::set-output name=boost-dir::$boostDir'
        echo '::set-output name=boost-lib-dir::$boostLibDir'
    
    - name: Define CMake Variables
      uses: Silverlan/common_actions/define_cmake_var@main
      with:
        cmake_var: ' -DDEPENDENCY_BOOST_INCLUDE=${{ steps.def-boost.outputs.boost-dir }} -DDEPENDENCY_BOOST_CHRONO_LIBRARY=${{ steps.def-boost.outputs.boost-lib-dir }}/boost_chrono-vc142-mt-x64-1_76.lib -DDEPENDENCY_BOOST_FILESYSTEM_LIBRARY=${{ steps.def-boost.outputs.boost-lib-dir }}/boost_filesystem-vc142-mt-x64-1_76.lib -DDEPENDENCY_BOOST_IOSTREAMS_LIBRARY=${{ steps.def-boost.outputs.boost-lib-dir }}/boost_iostreams-vc142-mt-x64-1_76.lib -DDEPENDENCY_BOOST_LOCALE_LIBRARY=${{ steps.def-boost.outputs.boost-lib-dir }}/boost_locale-vc142-mt-x64-1_76.lib -DDEPENDENCY_BOOST_REGEX_LIBRARY=${{ steps.def-boost.outputs.boost-lib-dir }}/boost_regex-vc142-mt-x64-1_76.lib -DDEPENDENCY_BOOST_SERIALIZATION_LIBRARY=${{ steps.def-boost.outputs.boost-lib-dir }}/boost_serialization-vc142-mt-x64-1_76.lib -DDEPENDENCY_BOOST_SYSTEM_LIBRARY=${{ steps.def-boost.outputs.boost-lib-dir }}/boost_system-vc142-mt-x64-1_76.lib -DDEPENDENCY_BOOST_THREAD_LIBRARY=${{ steps.def-boost.outputs.boost-lib-dir }}/boost_thread-vc142-mt-x64-1_76.lib -DDEPENDENCY_BOOST_ZLIB_LIBRARY=${{ steps.def-boost.outputs.boost-lib-dir }}/boost_zlib-vc142-mt-x64-1_76.lib -DEPENDENCY_LIBBOOST_FILESYSTEM_LIBRARY=${{ steps.def-boost.outputs.boost-lib-dir }}/libboost_filesystem-vc142-mt-x64-1_76.lib -DDEPENDENCY_LIBBOOST_IOSTREAMS_LIBRARY=${{ steps.def-boost.outputs.boost-lib-dir }}/libboost_iostreams-vc142-mt-x64-1_76.lib -DDEPENDENCY_LIBBOOST_REGEX_LIBRARY=${{ steps.def-boost.outputs.boost-lib-dir }}/libboost_regex-vc142-mt-x64-1_76.lib -DDEPENDENCY_LIBBOOST_SERIALIZATION_LIBRARY=${{ steps.def-boost.outputs.boost-lib-dir }}/libboost_serialization-vc142-mt-x64-1_76.lib -DDEPENDENCY_LIBBOOST_THREAD_LIBRARY=${{ steps.def-boost.outputs.boost-lib-dir }}/libboost_thread-vc142-mt-x64-1_76.lib -DDEPENDENCY_LIBBOOST_ZLIB_LIBRARY=${{ steps.def-boost.outputs.boost-lib-dir }}/libboost_zlib-vc142-mt-x64-1_76.lib'

        
    # end
    
    #- name: Install xorg-dev
    #  shell: bash
    #  run: |
    #    cd "./third_party_libs/boost_1_76_0"
    #    ls -R
    
    
    #- name: Install xorg-dev
    #  id: setup-vtflib-build
    #  shell: bash
    #  run: |
    #    if [ "$RUNNER_OS" == "Linux" ]; then
    #      # Required for glfw
    #      sudo apt install xorg-dev
    #    fi
    
    - name: Remove modules
      id: rem-mod
      shell: bash
      run: |
        # rm -rf ./modules/pr_curl
        rm -rf ./modules/pr_prosper_opengl
        rm -rf ./modules/pr_prosper_vulkan
            
    - uses: Silverlan/common_actions/build_cmake@main
      name: CMake Build
      with:
        build_type: ${{ matrix.config.build_type }}
        build_generator: ${{ matrix.config.generators }}
        cmake_var: 'DEPENDENCY_SHARED_LIBRARY'
        build_target: shared
        build_dir: '${{ matrix.config.build_dir }}/${{ inputs.dir }}'
        cmake_script_location: '${{ inputs.dir }}'
